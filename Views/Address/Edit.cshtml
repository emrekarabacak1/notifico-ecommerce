@model Notifico.Models.Address
@{
    ViewData["Title"] = "Adres Düzenle";
}
<style>
    .address-form-outer {
        max-width: 520px;
        margin: 2.5rem auto 0 auto;
        background: #fff;
        box-shadow: 0 4px 36px 0 rgba(48,80,160,0.07);
        border-radius: 1.1rem;
        padding: 2.4rem 2.1rem 2.2rem 2.1rem;
        border: 1px solid #eef3fb;
    }
    .address-form-title {
        font-size: 2rem;
        font-weight: 800;
        color: #183261;
        margin-bottom: 1.25rem;
        text-align: left;
        letter-spacing: -0.02em;
    }
    .address-form-label {
        font-weight: 600;
        color: #37446d;
        font-size: 1rem;
        margin-bottom: 0.2rem;
    }
    .address-form-control {
        border-radius: 0.8rem !important;
        border: 1.4px solid #d4e0f5;
        font-size: 1rem;
        padding: 0.74rem 1.15rem;
        background: #fcfcff;
        margin-bottom: 1.02rem;
        transition: border .15s;
    }
    .address-form-control:focus {
        border-color: #7aa7e7;
        box-shadow: 0 0 0 2px #e5f0ff;
        background: #f4f9ff;
    }
    .address-checkbox-label {
        font-size: 1.03rem;
        color: #37446d;
        font-weight: 500;
        margin-left: 0.7rem;
    }
    .address-btn-row {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: 1.2rem;
        margin-top: 0.7rem;
    }
    .address-btn-save {
        background: #2563eb;
        color: #fff;
        border-radius: 2rem;
        padding: 0.76rem 2.2rem;
        font-size: 1.09rem;
        font-weight: 700;
        border: none;
        transition: background .18s;
        box-shadow: 0 2px 10px 0 rgba(47,101,208,0.09);
    }
    .address-btn-save:hover {
        background: #153265;
    }
    .address-btn-cancel {
        color: #37446d;
        background: #eef3fb;
        border-radius: 2rem;
        padding: 0.76rem 2.2rem;
        font-size: 1.03rem;
        font-weight: 700;
        border: none;
        transition: background .18s, color .15s;
    }
    .address-btn-cancel:hover {
        background: #dbe7fa;
        color: #153265;
        text-decoration: underline;
    }
    media (max-width: 600px) {
        .address-form-outer { max-width: 97vw; padding: 1.1rem 0.5rem; }
        .address-form-title { font-size: 1.2rem; }
        .address-btn-row { flex-direction: column; gap: 0.7rem; align-items: stretch;}
    }
</style>

<div class="address-form-outer">
    <div class="address-form-title">Adres Düzenle</div>
    <form asp-action="Edit" method="post" autocomplete="off">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="UserId" />
        <div>
            <label asp-for="Title" class="address-form-label"></label>
            <input asp-for="Title" class="form-control address-form-control" autocomplete="off" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="FullAddress" class="address-form-label"></label>
            <textarea asp-for="FullAddress" class="form-control address-form-control" rows="2"></textarea>
            <span asp-validation-for="FullAddress" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="City" class="address-form-label"></label>
            <select id="citySelect" name="City" class="form-select address-form-control">
                <option value="">-- İl seçiniz --</option>
            </select>
            <span asp-validation-for="City" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="District" class="address-form-label"></label>
            <select id="districtSelect" name="District" class="form-select address-form-control">
                <option value="">-- İlçe seçiniz --</option>
            </select>
            <span asp-validation-for="District" class="text-danger"></span>
        </div>
        <div>
            <label asp-for="ZipCode" class="address-form-label"></label>
            <input asp-for="ZipCode" class="form-control address-form-control" />
            <span asp-validation-for="ZipCode" class="text-danger"></span>
        </div>
        <div class="form-check mb-3" style="margin-bottom: 1.09rem;">
            <input asp-for="IsDefault" class="form-check-input" style="margin-top: 0.5rem;" />
            <label asp-for="IsDefault" class="form-check-label address-checkbox-label"></label>
        </div>
        <div class="address-btn-row">
            <button type="submit" class="address-btn-save">Kaydet</button>
            <a asp-action="Index" class="address-btn-cancel">Vazgeç</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        let cityDistrictData = [];
        function fillCities(selectedCity) {
            var citySelect = document.getElementById('citySelect');
            citySelect.innerHTML = '<option value="">-- İl seçiniz --</option>';
            cityDistrictData.forEach(function (city) {
                var option = document.createElement('option');
                option.value = city.text;
                option.text = city.text;
                if (selectedCity && selectedCity === city.text) option.selected = true;
                citySelect.appendChild(option);
            });
        }
        function fillDistricts(cityName, selectedDistrict) {
            var districtSelect = document.getElementById('districtSelect');
            districtSelect.innerHTML = '<option value="">-- İlçe seçiniz --</option>';
            var city = cityDistrictData.find(function (c) { return c.text === cityName; });
            if (!city) return;
            city.districts.forEach(function (district) {
                var option = document.createElement('option');
                option.value = district.text;
                option.text = district.text;
                if (selectedDistrict && selectedDistrict === district.text) option.selected = true;
                districtSelect.appendChild(option);
            });
        }
        document.addEventListener("DOMContentLoaded", function () {
            fetch('/data/cityDistricts.json')
                .then(response => response.json())
                .then(data => {
                    cityDistrictData = data;
                    var initialCity = '@(Model.City ?? "")';
                    var initialDistrict = '@(Model.District ?? "")';
                    fillCities(initialCity);
                    if (initialCity) fillDistricts(initialCity, initialDistrict);
                    document.getElementById('citySelect').addEventListener('change', function () {
                        fillDistricts(this.value, null);
                    });
                })
                .catch(error => {
                    console.error("Şehir-ilçe verisi yüklenemedi:", error);
                });
        });

        $(function () {
        @if (TempData["Success"] != null)
        {
            <text>toastr.success("@TempData["Success"]", "Başarılı", { timeOut: 2000 }); </text>
        }
        @if (TempData["Error"] != null)
        {
            <text>toastr.error("@TempData["Error"]", "Hata", { timeOut: 2500 }); </text>
        }
        @if (ViewBag.ModelStateErrors != null)
        {
            foreach (var err in (List<string>)ViewBag.ModelStateErrors)
            {
                <text>toastr.error("@err", "Hata", { timeOut: 3000 }); </text>
            }
        }
        });
    </script>
}
