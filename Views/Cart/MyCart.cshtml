@model IEnumerable<Notifico.Models.CartItem>
@{
    ViewData["Title"] = "Sepetim";
    decimal toplamTutar = Model?.Sum(item => (item.Product?.Price ?? 0) * item.Quantity) ?? 0;
    var success = TempData["Success"] as string;
    var error = TempData["Error"] as string;
}

<h2>Sepetim</h2>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info mt-3">
        Sepetinizde ürün yok.
    </div>
}
else
{
    <button id="clearCartBtn" class="btn btn-danger mb-3">
        Sepeti Boşalt
    </button>

    <table class="table table-bordered table-striped mt-4">
        <thead>
            <tr>
                <th>Ürün</th>
                <th>Fiyat</th>
                <th>Adet</th>
                <th>Toplam</th>
                <th>İşlem</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var satirTutar = (item.Product != null ? item.Product.Price : 0) * item.Quantity;
                <tr data-id="@item.Id">
                    <td>@item.Product?.Name</td>
                    <td>@(item.Product != null ? $"{item.Product.Price:C}" : "-")</td>
                    <td>
                        <button class="btn btn-outline-secondary btn-sm btn-decrease"
                                data-id="@item.Id"
                        @(item.Quantity == 1 ? "disabled" : "")>
                            -
                        </button>
                        <span class="mx-2" id="qty_@item.Id">@item.Quantity</span>
                        <button class="btn btn-outline-secondary btn-sm btn-increase"
                                data-id="@item.Id"
                        @(item.Product != null && item.Quantity == item.Product.Stock ? "disabled" : "")>
                            +
                        </button>
                    </td>
                    <td id="line_@item.Id">@satirTutar.ToString("C")</td>
                    <td>
                        <button class="btn btn-danger btn-sm btn-remove" data-id="@item.Id">
                            Sepetten Çıkar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-3 text-end">
        <strong>Sepet Toplamı: <span id="cartTotal">@toplamTutar.ToString("C")</span></strong>
    </div>

    <form asp-action="Checkout" asp-controller="Cart" method="get" class="text-end mt-4">
        <button type="submit" class="btn btn-primary btn-lg"
        @(Model == null || !Model.Any() ? "disabled" : "")>
            Siparişi Onayla
        </button>
    </form>
}

@Html.AntiForgeryToken()

@section Scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajaxSetup({
                headers: { 'RequestVerificationToken': token }
            });

            $(".btn-increase").click(function () {
                var id = $(this).data("id");
                $.post("/Cart/IncreaseQuantityAjax", { id: id }, function (result) {
                    if (result.success) {
                        $("#qty_" + id).text(result.quantity);
                        $("#line_" + id).text(result.lineTotal.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }));
                        $("#cartTotal").text(result.cartTotal.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }));
                        toastr.success("Ürün adedi artırıldı", "Başarılı", { timeOut: 1500 });
                    } else {
                        toastr.error(result.error || "Hata oluştu!", "Hata", { timeOut: 2500 });
                    }
                });
            });
            $(".btn-decrease").click(function () {
                var id = $(this).data("id");
                $.post("/Cart/DecreaseQuantityAjax", { id: id }, function (result) {
                    if (result.success) {
                        $("#qty_" + id).text(result.quantity);
                        $("#line_" + id).text(result.lineTotal.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }));
                        $("#cartTotal").text(result.cartTotal.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }));
                        if (result.quantity == 0) {
                            $("tr[data-id='" + id + "']").remove();
                        }
                        toastr.success("Ürün adedi azaltıldı", "Başarılı", { timeOut: 1500 });
                    } else {
                        toastr.error(result.error || "Hata oluştu!", "Hata", { timeOut: 2500 });
                    }
                });
            });
            $(".btn-remove").click(function () {
                if (!confirm("Bu ürünü sepetten çıkarmak istediğinize emin misiniz?")) return;
                var id = $(this).data("id");
                $.post("/Cart/RemoveFromCartAjax", { id: id }, function (result) {
                    if (result.success) {
                        $("tr[data-id='" + id + "']").remove();
                        $("#cartTotal").text(result.cartTotal.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }));
                        toastr.success("Ürün sepetten çıkarıldı", "Başarılı", { timeOut: 1600 });
                    } else {
                        toastr.error(result.error || "Hata oluştu!", "Hata", { timeOut: 2500 });
                    }
                });
            });
            $("#clearCartBtn").click(function () {
                if (!confirm("Sepeti tamamen boşaltmak istediğinizden emin misiniz?")) return;
                $.post("/Cart/ClearCartAjax", {}, function (result) {
                    if (result.success) {
                        $("tbody").empty();
                        $("#cartTotal").text("0,00 ₺");
                        toastr.success("Sepetiniz tamamen temizlendi", "Başarılı", { timeOut: 1600 });
                    } else {
                        toastr.error("Sepet temizlenemedi: " + result.error, "Hata", { timeOut: 2500 });
                    }
                });
            });

        @if (!string.IsNullOrEmpty(success))
        {
            <text>
                    toastr.success("@success", "Başarılı", { timeOut: 2000 });
            </text>
        }
        @if (!string.IsNullOrEmpty(error))
        {
            <text>
                    toastr.error("@error", "Hata", { timeOut: 2500 });
            </text>
        }
                });
    </script>
}
